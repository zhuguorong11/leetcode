import java.util.Arrays;

/**
 * 若给定两个整数数组（第一个是数组 A，第二个是数组 B），在数组 A 中取 A[ i ]，数组 B 中取 B[ j ]，A[ i ] 和 B[ j ] 两者的差越小越好( | A[ i ] - B[ j ] | )，写一个函数返回最小差。

挑战 ：
时间复杂度 O(n log n)

格式：

输入行输入两个整数数组 A 和 B，最后输出返回的最小差。

样例输入

A = [ 3，4，6，7 ]
B = [ 2，3，8，9 ]

样例输出

0
 * @author zhugr
 *
 */
public class Solution {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	public static int minimumDiff(int[] nums1, int[] nums2){
		if(nums1.length == 0 || nums2.length == 0){
			return 0;
		}
		Arrays.sort(nums2);
		int res = Integer.MAX_VALUE;
		for(int i = 0; i < nums1.length; ++i){
			int begin = 0, end = nums2.length - 1;
			int mid = 0;
			int target = nums1[i];
			while(begin <= end){
				mid = begin + (end - begin) / 2;
				if(nums2[mid] == target){
					return 0;
				}else if(nums2[mid] > target){
					end = mid;
				}else {
					begin = mid;
				}
			}
			res = Math.min(res, Math.abs(nums1[i] - nums2[mid]));
			//mid的左右两侧再比较一次
			if(mid > 0){
				Math.min(res, Math.abs(nums1[i] - nums2[mid - 1]));
			}
			if(mid < nums2.length - 1){
				Math.min(res, Math.abs(nums1[i] - nums2[mid + 1]));
			}
		}
		return res;
	}
}
